//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.0.3705.288.
// 
namespace com.qas.proweb.soap {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QASoapBinding", Namespace="http://www.qas.com/web-2005-02")]
    public class ProWeb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ProWeb() {
            this.Url = "http://localhost:2021/";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoSearch", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("QASearchResult", Namespace="http://www.qas.com/web-2005-02")]
        public QASearchResult DoSearch([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QASearch QASearch) {
            object[] results = this.Invoke("DoSearch", new object[] {
                        QASearch});
            return ((QASearchResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoSearch(QASearch QASearch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoSearch", new object[] {
                        QASearch}, callback, asyncState);
        }
        
        /// <remarks/>
        public QASearchResult EndDoSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QASearchResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoRefine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("Picklist", Namespace="http://www.qas.com/web-2005-02")]
        public Picklist DoRefine([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QARefine QARefine) {
            object[] results = this.Invoke("DoRefine", new object[] {
                        QARefine});
            return ((Picklist)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoRefine(QARefine QARefine, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoRefine", new object[] {
                        QARefine}, callback, asyncState);
        }
        
        /// <remarks/>
        public Picklist EndDoRefine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Picklist)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetAddress", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("Address", Namespace="http://www.qas.com/web-2005-02")]
        public Address DoGetAddress([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QAGetAddress QAGetAddress) {
            object[] results = this.Invoke("DoGetAddress", new object[] {
                        QAGetAddress});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetAddress(QAGetAddress QAGetAddress, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetAddress", new object[] {
                        QAGetAddress}, callback, asyncState);
        }
        
        /// <remarks/>
        public Address EndDoGetAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QAData", Namespace="http://www.qas.com/web-2005-02")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DataSet", Namespace="http://www.qas.com/web-2005-02", IsNullable=false)]
        public QADataSet[] DoGetData() {
            object[] results = this.Invoke("DoGetData", new object[0]);
            return ((QADataSet[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public QADataSet[] EndDoGetData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QADataSet[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetLicenseInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("QALicenceInfo", Namespace="http://www.qas.com/web-2005-02")]
        public QALicenceInfo DoGetLicenseInfo() {
            object[] results = this.Invoke("DoGetLicenseInfo", new object[0]);
            return ((QALicenceInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetLicenseInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetLicenseInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public QALicenceInfo EndDoGetLicenseInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QALicenceInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetSystemInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QASystemInfo", Namespace="http://www.qas.com/web-2005-02")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SystemInfo", Namespace="http://www.qas.com/web-2005-02", IsNullable=false)]
        public string[] DoGetSystemInfo() {
            object[] results = this.Invoke("DoGetSystemInfo", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetSystemInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetSystemInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndDoGetSystemInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetExampleAddresses", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QAExampleAddresses", Namespace="http://www.qas.com/web-2005-02")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ExampleAddress", Namespace="http://www.qas.com/web-2005-02", IsNullable=false)]
        public QAExampleAddress[] DoGetExampleAddresses([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QAGetExampleAddresses QAGetExampleAddresses) {
            object[] results = this.Invoke("DoGetExampleAddresses", new object[] {
                        QAGetExampleAddresses});
            return ((QAExampleAddress[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetExampleAddresses(QAGetExampleAddresses QAGetExampleAddresses, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetExampleAddresses", new object[] {
                        QAGetExampleAddresses}, callback, asyncState);
        }
        
        /// <remarks/>
        public QAExampleAddress[] EndDoGetExampleAddresses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QAExampleAddress[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetLayouts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QALayouts", Namespace="http://www.qas.com/web-2005-02")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Layout", Namespace="http://www.qas.com/web-2005-02", IsNullable=false)]
        public QALayout[] DoGetLayouts([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QAGetLayouts QAGetLayouts) {
            object[] results = this.Invoke("DoGetLayouts", new object[] {
                        QAGetLayouts});
            return ((QALayout[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetLayouts(QAGetLayouts QAGetLayouts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetLayouts", new object[] {
                        QAGetLayouts}, callback, asyncState);
        }
        
        /// <remarks/>
        public QALayout[] EndDoGetLayouts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QALayout[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoGetPromptSet", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("QAPromptSet", Namespace="http://www.qas.com/web-2005-02")]
        public QAPromptSet DoGetPromptSet([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QAGetPromptSet QAGetPromptSet) {
            object[] results = this.Invoke("DoGetPromptSet", new object[] {
                        QAGetPromptSet});
            return ((QAPromptSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoGetPromptSet(QAGetPromptSet QAGetPromptSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoGetPromptSet", new object[] {
                        QAGetPromptSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public QAPromptSet EndDoGetPromptSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QAPromptSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.qas.com/web-2005-02/DoCanSearch", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("QASearchOk", Namespace="http://www.qas.com/web-2005-02")]
        public QASearchOk DoCanSearch([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.qas.com/web-2005-02")] QACanSearch QACanSearch) {
            object[] results = this.Invoke("DoCanSearch", new object[] {
                        QACanSearch});
            return ((QASearchOk)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoCanSearch(QACanSearch QACanSearch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoCanSearch", new object[] {
                        QACanSearch}, callback, asyncState);
        }
        
        /// <remarks/>
        public QASearchOk EndDoCanSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QASearchOk)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QASearch {
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public EngineType Engine;
        
        /// <remarks/>
        public string Layout;
        
        /// <remarks/>
        public QAConfigType QAConfig;
        
        /// <remarks/>
        public string Search;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class EngineType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Flatten;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlattenSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public EngineIntensityType Intensity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntensitySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PromptSetType PromptSet;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptSetSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string Threshold;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string Timeout;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public EngineEnumType Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public enum EngineIntensityType {
        
        /// <remarks/>
        Exact,
        
        /// <remarks/>
        Close,
        
        /// <remarks/>
        Extensive,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public enum PromptSetType {
        
        /// <remarks/>
        OneLine,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Generic,
        
        /// <remarks/>
        Optimal,
        
        /// <remarks/>
        Alternate,
        
        /// <remarks/>
        Alternate2,
        
        /// <remarks/>
        Alternate3,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public enum EngineEnumType {
        
        /// <remarks/>
        Singleline,
        
        /// <remarks/>
        Typedown,
        
        /// <remarks/>
        Verification,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QASearchOk {
        
        /// <remarks/>
        public bool IsOk;
        
        /// <remarks/>
        public string ErrorCode;
        
        /// <remarks/>
        public string ErrorMessage;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QACanSearch {
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public EngineType Engine;
        
        /// <remarks/>
        public string Layout;
        
        /// <remarks/>
        public QAConfigType QAConfig;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAConfigType {
        
        /// <remarks/>
        public string IniFile;
        
        /// <remarks/>
        public string IniSection;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class PromptLine {
        
        /// <remarks/>
        public string Prompt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string SuggestedInputLength;
        
        /// <remarks/>
        public string Example;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAPromptSet {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public PromptLine[] Line;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Dynamic = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAGetPromptSet {
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public EngineType Engine;
        
        /// <remarks/>
        public PromptSetType PromptSet;
        
        /// <remarks/>
        public QAConfigType QAConfig;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QALayout {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Comment;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAGetLayouts {
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public QAConfigType QAConfig;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAExampleAddress {
        
        /// <remarks/>
        public QAAddressType Address;
        
        /// <remarks/>
        public string Comment;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAAddressType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddressLine")]
        public AddressLineType[] AddressLine;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Overflow = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Truncated = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class AddressLineType {
        
        /// <remarks/>
        public string Label;
        
        /// <remarks/>
        public string Line;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(LineContentType.Address)]
        public LineContentType LineContent = LineContentType.Address;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Overflow = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Truncated = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public enum LineContentType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Address,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        Ancillary,
        
        /// <remarks/>
        DataPlus,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAGetExampleAddresses {
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string Layout;
        
        /// <remarks/>
        public QAConfigType QAConfig;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QALicensedSet {
        
        /// <remarks/>
        public string ID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Copyright;
        
        /// <remarks/>
        public string Version;
        
        /// <remarks/>
        public string BaseCountry;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string Server;
        
        /// <remarks/>
        public LicenceWarningLevel WarningLevel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string DaysLeft;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string DataDaysLeft;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string LicenceDaysLeft;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public enum LicenceWarningLevel {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        DataExpiring,
        
        /// <remarks/>
        LicenceExpiring,
        
        /// <remarks/>
        ClicksLow,
        
        /// <remarks/>
        Evaluation,
        
        /// <remarks/>
        NoClicks,
        
        /// <remarks/>
        DataExpired,
        
        /// <remarks/>
        EvalLicenceExpired,
        
        /// <remarks/>
        FullLicenceExpired,
        
        /// <remarks/>
        LicenceNotFound,
        
        /// <remarks/>
        DataUnreadable,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QALicenceInfo {
        
        /// <remarks/>
        public LicenceWarningLevel WarningLevel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LicensedSet")]
        public QALicensedSet[] LicensedSet;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QADataSet {
        
        /// <remarks/>
        public string ID;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class Address {
        
        /// <remarks/>
        public QAAddressType QAAddress;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAGetAddress {
        
        /// <remarks/>
        public string Layout;
        
        /// <remarks/>
        public string Moniker;
        
        /// <remarks/>
        public QAConfigType QAConfig;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class Picklist {
        
        /// <remarks/>
        public QAPicklistType QAPicklist;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QAPicklistType {
        
        /// <remarks/>
        public string FullPicklistMoniker;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PicklistEntry")]
        public PicklistEntryType[] PicklistEntry;
        
        /// <remarks/>
        public string Prompt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string Total;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoFormatSafe = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoFormatPastClose = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoStepinSafe = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoStepinPastClose = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool LargePotential = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MaxMatches = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MoreOtherMatches = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool OverThreshold = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Timeout = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class PicklistEntryType {
        
        /// <remarks/>
        public string Moniker;
        
        /// <remarks/>
        public string PartialAddress;
        
        /// <remarks/>
        public string Picklist;
        
        /// <remarks/>
        public string Postcode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string Score;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FullAddress = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Multiples = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool CanStep = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AliasMatch = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PostcodeRecoded = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool CrossBorderMatch = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DummyPOBox = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Name = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Information = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool WarnInformation = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IncompleteAddr = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool UnresolvableRange = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PhantomPrimaryPoint = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QARefine {
        
        /// <remarks/>
        public string Moniker;
        
        /// <remarks/>
        public string Refinement;
        
        /// <remarks/>
        public QAConfigType QAConfig;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string Threshold;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string Timeout;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public class QASearchResult {
        
        /// <remarks/>
        public QAPicklistType QAPicklist;
        
        /// <remarks/>
        public QAAddressType QAAddress;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(VerifyLevelType.None)]
        public VerifyLevelType VerifyLevel = VerifyLevelType.None;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.qas.com/web-2005-02")]
    public enum VerifyLevelType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Verified,
        
        /// <remarks/>
        InteractionRequired,
        
        /// <remarks/>
        PremisesPartial,
        
        /// <remarks/>
        StreetPartial,
        
        /// <remarks/>
        Multiple,
    }
}
