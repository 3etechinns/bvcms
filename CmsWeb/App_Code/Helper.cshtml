@using System.Web.Mvc
@using DocumentFormat.OpenXml.Drawing.Charts
@using UtilityExtensions
@helper AnchorLink(string text, string href, string id = null, string target = null, string style = null)
{
  <a href="@href" @(target.HasValue() ? "target=" + target : "") @(id.HasValue() ? "id=" + id : "") @(style.HasValue() ? "class=" + style : "")>@text</a>
}
@helper LiAnchorLink(string text, string url, bool display = true, string target = null)
{
  if (display)
  {
    <li>@Helper.AnchorLink(text, url, target: target)</li>
  }
}
@helper LiHeader(string text, bool display = true)
{
  if (display)
  {
    if (text.HasValue())
    {
      <li class="header">@text</li>
    }
    else
    {
      <li class="lispace">&nbsp;</li>
    }
  }
}
@helper JQueryIdLink(string text, string id)
{
  <a id="@id" href="#">@text</a>
}
@helper JQueryIdLink(string text, string id, string data)
{
  <a id="@id" data-item="@data">@text</a>
}
@helper LiJQueryIdLink(string text, string id, bool display = true)
{
  if (display)
  {
    <li><a id="@id" href="#">@text</a></li>
  }
}
@helper ButtonLink(string text, string href, string target = null)
{
  if (target.HasValue())
  {
    <a href="@href" target="@target">@text</a>
  }
  else
  {
    <a href="@href">@text</a>
  }
}
@helper OnlineRegSubmitButtonRow(string text, bool onlyoneallowed = false, string style = "")
{
  <div class="form-group">
    <div class="col-sm-12">
      @Helper.OnlineRegSubmitButton(text, onlyoneallowed, style: "btn-primary pull-right " + style)
    </div>
  </div>
}
@helper OnlineRegSubmitButton(string text, bool onlyoneallowed = false, string style = "btn-primary")
{
  <input type="submit" id="submitit" @(onlyoneallowed ? "data-onlyoneallowed=true" : "") class="btn @style" value="@text" />
}
@helper OnlineRegSubmitLinkRow(string url, string text, string style = "btn-primary")
{
  <div class="form-group">
    <div class="col-sm-offset-3 col-sm-9">
      <a href="@url" class="btn @style submitlink">
        @text
      </a>
    </div>
  </div>
}

@helper OnlineRegAjaxButtonRow(string url, string text, string style = "btn-primary", string id = "")
{
  <div class="form-group">
    <div class="col-sm-offset-3 col-sm-9">
      @OnlineRegAjaxButton(url, text, style, id)
    </div>
  </div>
}

@helper OnlineRegAjaxButton(string url, string text, string style = "btn-primary", string id = "")
{
  <a @(id.HasValue() ? "id=" + id : "") href="@url" class="btn @style submitbutton ajax">
    @text
  </a>
}
@helper OnlineRegHeaderFullRow(string text)
{
  <div class="form-group">
    <div class="col-sm-12">
      <h4 class="form-control-static">@text</h4>
    </div>
  </div>
}
@helper OnlineRegHeader(string text)
{
  <div class="form-group">
    <div class="col-sm-offset-3 col-sm-9">
      <p class="form-control-static">
        <strong>@MvcHtmlString.Create(text)</strong>
      </p>
    </div>
  </div>

}
@helper OnlineRegInstruction(string text)
{
  <div class="form-group">
    <div class="col-sm-12">
      <p class="bg-info pad10">
        <strong>@MvcHtmlString.Create(text)</strong>
      </p>
    </div>
  </div>
}
@helper HiddenId(string name, int? id)
{
  <form class="ajax">
    <input type="hidden" name="@name" value="@id" />
  </form>
}
@helper OrgFilter(string namefilter, string sgfilter)
{
  @:@OrgFilter(namefilter, sgfilter, showHidden: false,  label: "")  
}
}
@helper OrgFilter(string namefilter, bool showHidden, string label = "")
{
  @:@OrgFilter(namefilter, "not applicable", showHidden, label)  
}
@helper OrgFilter(string namefilter, string sgfilter, bool showHidden, string label = "")
{
  <div id="Filter" class="form-inline">
    <input type="text" class="form-control tip" id="nameFilterMembers"
           name="nameFilter" placeholder="Name Filter" value="@namefilter"
           title="Name Filter
              First and last name or just last name.
              You can put just the first few letters of each.
              PeopleId works too.">
    @if (sgfilter != "not applicable")
    {
    <input type="text" class="form-control tip" id="sgFilterMembers"
           name="sgFilter" placeholder="SmallGroup Filter" value="@sgfilter"
           title="SmallGroup Filter
              Match a smallgroup name.
              You can just use the first few letters of a smallgroup.
              Lead with - to exclude.
              Comma separate for multiple smallgroups.
              NONE to find no smallgroups assigned.
              ALL: to match all." />
    }
    <a class="setfilter btn ajax">
      Filter
      @if (namefilter.HasValue() || (sgfilter.HasValue() && sgfilter != "not applicable"))
      {
        <span style='color:red'>(filtered)</span>
      }
    </a>
    <a class="btn ajax" data-clear="orgfilter" href="#">Clear</a>
    @if (label.HasValue())
    {
      <label class="checkbox">
        @if (showHidden) 
        {
          <input name="showHidden" type="checkbox" value="true" checked='checked' />
        }
        else
        {
          <input name="showHidden" type="checkbox" value="true" />
        }
        <input name="showHidden" type="hidden" value="false" />
      </label>
      @:Show Hidden @label
    }
  </div>
}
