@using System.Web.UI.WebControls
@using CmsWeb;
@using CmsData
@using CmsWeb.Areas.Search.Models
@using IronPython.Modules
@model CmsWeb.Areas.Search.Models.AdvancedModel

@{
    var editing = false;
}
@helper ClauseItem(QueryBuilderClause clause)
{
    <li>
        <a href="#editCondition" data-toggle="modal-popover" data-placement="bottom" class="edit edit-popover">
            <span class="condition">@clause</span>
        </a>
        <div class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                <i class="icon-cog"></i>
            </a>
            <ul class="dropdown-menu">
                <li><a href="#editCondition" data-toggle="modal-popover" class="edit edit-popover"><i class="icon-pencil icon-fixedwidth"></i> Edit</a></li>
                <li><a href="#" class="duplicateclause"><i class="icon-copy icon-fixedwidth"></i> Duplicate</a></li>
                @CogItems(clause) 
            </ul>
        </div>
    </li>
}
@helper GroupItem(QueryBuilderClause clause)
{
    <ul @(clause.IsFirst ? "id=conditionsList" : "class=subgroups")>
        <li class="group">
            <header>
                @GroupComparisonList(clause) 
                <div class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                    <i class="icon-cog"></i>
                </a>
                    <ul class="dropdown-menu">
                        <li><a href="#" class="addnewgroup"><i class="icon-plus icon-fixedwidth"></i> Add Group</a></li>
                        @CogItems(clause) 
                    </ul>
                </div>
            </header>
            <ul class="conditions">
                @foreach (var c in clause.Clauses.Where(cc => !cc.IsGroup))
                {
                    @ClauseItem(c)
                }
            </ul>
            @foreach (var c in clause.Clauses.Where(cc => cc.IsGroup))
            {
                @GroupItem(c)
            }
        </li>
    </ul>
}
@helper CogItems(QueryBuilderClause clause)
{
    <li><a href="#" class="insgroupabove"><i class="icon-signout icon-fixedwidth"></i> Insert Group</a></li>

    if (clause.Parent != null && clause.Parent.Parent != null)
    {
        <li><a href="#" class="movetoprevgroup"><i class="icon-arrow-up icon-fixedwidth"></i> Move up a Group</a></li>
    }
    <li><a href="#" class="deletegroup"><i class="icon-trash icon-fixedwidth"></i> Delete</a></li>
}
@helper GroupComparisonList(QueryBuilderClause clause)
{
    <label for="match-1">Match</label>
    <select name="match-1" id="match-1" class="simple changegroup">
        @OptionItem(clause, CompareType.AllTrue)
        @OptionItem(clause, CompareType.AnyTrue)
        @OptionItem(clause, CompareType.AllFalse)
    </select>
}
@helper OptionItem(QueryBuilderClause clause, CompareType type)
{
    <option value="@type.ToString()" @(clause.ComparisonType == type ? "selected" : "")>type.ToString()</option>
}
<div id="conditions">
    @Html.Hidden("AutoRun")
    @Html.Hidden("NewSearchId")
    @if (ViewBag.NewSearch == null)
    {
        @GroupItem(Model.TopClause)
    }
</div>
<div class="row-fluid">
    <div class="span6">
        <a href="/Query/NewQuery" class="btn btn-success pull-right">New</a>
        <a href="/SavedQuery2" class="btn pull-right">Saved</a>
    </div>
    <div class="span6">
        <a id="Run" class="btn btn-primary pull-right"><i class="icon-play"></i></a>
    </div>
</div>
@if (editing)
{
    @Html.Partial("EditCondition", Model)
}
