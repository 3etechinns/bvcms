@using System.Web.UI.WebControls
@using CmsWeb;
@using CmsData
@using CmsWeb.Areas.Search.Models
@using IronPython.Modules
@model CmsWeb.Areas.Search.Models.AdvancedModel
<div id="conditions">
    @Html.Hidden("AutoRun")
    @Html.Hidden("NewSearchId")
    @Html.Hidden("NewId")
    @GroupItem(Model.TopClause)
</div>
@helper GroupItem(QueryBuilderClause clause)
{
    <ul @(clause.IsFirst ? "id=conditionsList" : "") class="subgroups">
        <li class="group condition" data-qid="@clause.QueryId">
            <header title="@clause.QueryId">
                <label for="match-1">Match</label>
                @Html.DropDownList4("", "", Model.GroupComparisons(), clause.Comparison, "simple changegroup")
                @CogItems(clause)
            </header>
            <div class="group-actions">
                <a href="#" class="addnewclause"><i class="icon-plus"> Condition</i></a>
                <a href="#" class="addnewgroup"><i class="icon-plus"> Group</i></a>
            </div>
            <ul class="conditions">
                @foreach (var c in clause.Clauses.Where(cc => !cc.IsGroup))
                {
                    @ClauseItem(c)
                }
            </ul>
            @foreach (var c in clause.Clauses.Where(cc => cc.IsGroup))
            {
                @GroupItem(c)
            }
        </li>
    </ul>
}
@helper ClauseItem(QueryBuilderClause clause)
{
    <li class="condition" data-qid="@clause.QueryId">
        <a href="#editcondition" class="edit edit-popover">
            <span class="value">@clause</span>
        </a>
        @CogItems(clause)
    </li>
}
@helper CogItems(QueryBuilderClause clause)
{
    <div class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
            <i class="icon-cog"></i>
        </a>
        <ul class="dropdown-menu">
            @if (!clause.IsGroup)
            {
                <li><a href="#editCondition" class="edit-popover"><i class="icon-pencil icon-fixedwidth"></i> Edit</a></li>
            }
            @if (clause.CanRemove)
            {
                <li><a href="#" class="cutcondition"><i class="icon-cut icon-fixedwidth"></i> Cut</a></li>
            }
            <li><a href="#" class="copycondition"><i class="icon-copy icon-fixedwidth"></i> Copy</a></li>
            <li class="pastecondition" style="display:none"><a href="#" class="pastecondition"><i class="icon-paste icon-fixedwidth"></i> Paste</a></li>
            <li><a href="#" class="insgroupabove"><i class="icon-share-alt icon-fixedwidth"></i> Insert Group Above this</a></li>
            @if (clause.CanRemove)
            {
                <li><a class="delete" href="#"><i class="icon-trash icon-fixedwidth icon-fixedwidth"></i> <span class="text-warning">Delete</span></a></li>
            }
        </ul>
    </div>
}