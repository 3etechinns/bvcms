@using System
@using CmsData
@using CmsData.Codes
@using CmsData.View
@using UtilityExtensions
@model CmsWeb.Areas.Org.Models.OrgPeopleModel
@{
    var target = Util2.TargetLinkPeople ? "target='people'" : "";
    var hideBirthDate = DbUtil.Db.Setting("HideBirthYearForOrgLeaders", false) && Util.IsInRole("OrgLeadersOnly");
}
<table class="table table-striped">
    <thead>
        <tr>
            <th style="width: 20px;">@Model.SortLink("Ck")</th>
            @if (Model.MultiSelect)
            {
                <th>@Model.SortLink("Tab")</th>
            }
            <th>
                @Model.SortLink("Name")
            </th>
            <th>
                @Model.SortLink("MemberType")
            </th>
            <th>
                @Model.SortLink("Church")<br />
                @if (!hideBirthDate)
                {
                    <text>@Model.SortLink("Age") - @Model.SortLink("Bday")</text>
                }
            </th>
            <th>Communication</th>
            <th>@Model.SortLink("% Att.")</th>
            <th>
                <div class="btn-group">
                    <button data-toggle="dropdown" class="btn btn-default dropdown-toggle">
                        Dates <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li class="dropdown-header">Sort By Date</li>
                        <li>@Model.SortLink("Last Attended")</li>
                        <li>@Model.SortLink("Join Date")</li>
                        <li>@Model.SortLink("Drop Date")</li>
                        <li>@Model.SortLink("Inactive Date")</li>
                        @if (Model.ShowMinistryInfo)
                        {
                            <li>@Model.SortLink("Contact Received")</li>
                            <li>@Model.SortLink("Contact Made")</li>
                            <li>@Model.SortLink("Task About")</li>
                            <li>@Model.SortLink("Task Assigned")</li>
                        }
                    </ul>
                </div>
            </th>
            <th>Tag</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in Model.ViewList())
        {
          var hastag = p.HasTag ?? false;
            <tr class="@(p.IsDeceased == true ? "danger" : "")">
                <td style="width: 20px;">
                    <input type="checkbox" class="omck" value="@p.PeopleId" @(p.IsChecked == true ? "checked=checked" : "") />
                </td>
                @if (Model.MultiSelect)
                {
                    <td>@p.Tab</td>
                }
                <td>
                    @if (User.IsInRole("OrgLeadersOnly") && DbUtil.Db.Setting("UX-DisablePersonLinksForOrgLeaders", false))
                    {
                        <text>@p.Name</text>
                    }
                    else
                    {
                        <a href="/Person2/@p.PeopleId" class="target" @target>@p.Name</a>
                    }

                    @if (Model.ShowAddress)
                    {
                        @p.AddressBlock
                    }
                </td>
                <td>
                    @ManageMemberLinks(p)
                    @ManagePrevMemberLinks(p)
                    @ManageGuestLinks(p)
                    @ManageProspectLinks(p)
                </td>
                <td>
                    @p.MemberStatus<br />
                    @if (!hideBirthDate)
                    {
                        <text>@p.Age - @p.BirthDate</text>
                    }
                </td>
                <td>
                    @foreach (var ph in p.Phones)
                {
                        @ph <br />
                    }
                    <a href="mailto:@p.EmailAddress">@p.EmailAddress</a>
                </td>
                <td>
                    @(!string.IsNullOrWhiteSpace(p.AttPct.ToString2("N1")) ? $"{p.AttPct.ToString2("N1")}%" : "")
                </td>
                <td>
                    @ShowDateLink(p.LastAttended, $"/Org/GotoMeetingForDate/{Model.Id}/{p.LastAttendedTicks}", "Last")
                    @ShowDate(p.Joined, "Joined")
                    @ShowDate(p.Dropped, "Dropped")
                    @ShowDate(p.InactiveDate, "Inactive")
                    @if (Model.ShowMinistryInfo)
                {
                        @ShowDateLink(p.LastContactReceivedDt, "/Contact2", p.LastContactReceivedId, "Contactee")
                        @ShowDateLink(p.LastContactMadeDt, "/Contact2", p.LastContactMadeId, "Minister")
                        @ShowDateLink(p.TaskAboutDt, "/Person2", p.PeopleId, "Needs Touch", "#tab-tasksabout")
                        @ShowDateLink(p.TaskDelegatedDt, "/Person2", p.PeopleId, "Has Task", "#tab-tasksassigned")
                    }
                </td>
                <td>
                    <a href="#" class="taguntag btn btn-sm @(hastag ? "btn-default" : "btn-success")" title="Add to/Remove from Active Tag" pid="@p.PeopleId"><i class="fa fa-tag"></i> @(hastag ? "Remove" : "Add")</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@helper DaysAgo(DateTime dt)
{
if (dt > DateTime.Today)
{
    return;
}
    <span class="smallfont">@DateTime.Today.Subtract(dt).TotalDays.ToInt()</span>
}
@helper ShowDateLink(DateTime? dt, string url, int? id, string type, string extra = "")
{
if (dt.HasValue)
{
        <div>
            <a href="@url/@id@extra" target="contact">@dt.FormatDate2(type)</a>
            @DaysAgo(dt.Value)
        </div>
}
}
@helper ShowDateLink(DateTime? dt, string url, string type)
{
if (dt.HasValue)
{
        <div>
            <a href="@url" target="contact">@dt.FormatDate2(type)</a>
            @DaysAgo(dt.Value)
        </div>
}
}
@helper ShowDate(DateTime? dt, string type)
{
if (dt.HasValue)
{
        <div>
            <span>@dt.FormatDate2(type)</span>
            @DaysAgo(dt.Value)
        </div>
}
}
@helper ManageGuestLinks(OrgPerson p)
{
if (p.GroupCode == GroupSelectCode.Guest)
{
        <div>
            <a href="/Org/Join/@Model.Id/@p.PeopleId" class="joinlink"
               confirm="Make @p.Name a Member of this Org?">
                Join Org
            </a>
        </div>
    if (p.MemberType != "Prospect")
    {
            <div>
                <a href="/Org/AddProspect/@Model.Id/@p.PeopleId" class="joinlink"
                   confirm="Make @p.Name a Prospect of this Org?">
                    Add as Prospect
                </a>
            </div>
    }
    if (p.LastAttended.HasValue)
    {
        if (p.Hidden == true)
        {
                <div>
                    <a href="/Org/ShowVisitor/@Model.Id/@p.PeopleId/@p.LastAttended.Value.Ticks/Show" class="joinlink"
                       confirm="Show @p.Name as a Guest for this Org?">
                        Show
                    </a>
                </div>
        }
        else
        {
                <div>
                    <a href="/Org/ShowVisitor/@Model.Id/@p.PeopleId/@p.LastAttended.Value.Ticks/Hide" class="joinlink"
                       confirm="Hide @p.Name as a Guest for this Org until next visit?">
                        Hide
                    </a>
                </div>
        }
    }
}
}

@helper ManageProspectLinks(OrgPerson p)
{
if (p.GroupCode == GroupSelectCode.Prospect)
{
    if (p.Hidden == true)
    {
            <div>
                <a href="/Org/ShowProspect/@Model.Id/@p.PeopleId/Show" class="joinlink"
                   confirm="Show @p.Name in Prospect List for this Org?">
                    Show
                </a>
            </div>
    }
    else
    {
            <div>
                <a href="/Org/ShowProspect/@Model.Id/@p.PeopleId/Hide" class="joinlink"
                   confirm="Hide @p.Name on Prospect List for this Org?">
                    Hide
                </a>
            </div>
    }
}
}
@helper ManageMemberLinks(OrgPerson p)
{
if (!(new[] { GroupSelectCode.Guest, GroupSelectCode.Previous }).Contains(p.GroupCode))
{
        <div><a class="membertype" href="/OrgMemberDialog/@p.Group/@Model.Id/@p.PeopleId"> @p.MemberType </a></div>
}
}
@helper ManagePrevMemberLinks(OrgPerson p)
{
if (p.GroupCode == GroupSelectCode.Previous)
{
        <div><a href="/TransactionHistory/@p.PeopleId/@Model.Id" target="history"> @p.MemberType </a></div>
        <div>
            <a href="/Org/Join/@Model.Id/@p.PeopleId" class="joinlink"
               confirm="Re-Join @p.Name to this Org?">Re-Join Org</a>
        </div>
}
}



