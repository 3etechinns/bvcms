@using CmsData.Codes
@using CmsData.View
@using CmsWeb
@using UtilityExtensions
@model CmsWeb.Areas.Org.Models.OrgPeopleModel

<form class="form form-horizontal non-modal ajax span12 pad-left">
  @HiddenElements()
  <div id="groupSelector" class="btn-group">
    @GroupButton(GroupSelectCode.Member, "Members")
    @GroupButton(GroupSelectCode.Previous, "Previous")
    @GroupButton(GroupSelectCode.Inactive, "Inactive")
    @GroupButton(GroupSelectCode.Pending, "Pending")
    @GroupButton(GroupSelectCode.Prospect, "Prospects")
    @GroupButton(GroupSelectCode.Guest, "Guests")
    @GroupOptions()
  </div>
  @FilterPeople()
  @Html.Partial("PagerHidden", Model)
  <div class="pagination pagination-mini">
    Count: <strong>@Model.Count()</strong>
    @Html.Partial("Pager3", Model)
  </div>
  <table class="table table-condensed table-striped not-wide grid2">
    @TableHeader()
    @TableBody()
  </table>
  <div class="pagination pagination-mini">
    @Html.Partial("Pager3", Model)
  </div>
</form>



@helper GroupButton(string group, string name)
{
  <button class='btn grp @Model.GroupActive(group)' value="@group">@name</button>
  if (group == GroupSelectCode.Guest)
  {
    return;
  }
  var showdrop = User.IsInRole("Edit") && (Model.MultiSelect ? "" : Model.GroupSelect) == group;
  group = showdrop ? group : "";
  <div class="btn-group">
    <button class="btn dropdown-toggle @(showdrop ? "" : "hide")" data-toggle="dropdown"><span class="caret"></span></button>
    @switch (group)
    {
    case GroupSelectCode.Member:
    <ul class="dropdown-menu">
      <li><a href="/SearchAdd2/Dialog/org/@Model.Id" class="searchadd">Add Members</a></li>
      <li><a href="/AddToOrgFromTag/@Model.Id" class="addfromtag" title="Add Members From Tag">Add from Tag</a></li>
      <li><a id="currMembersUpdate" href="/OrgMembersDialog/@Model.Id" title="Update Members" class="memberdialog">Update Members</a></li>
    </ul>
      break;
    case GroupSelectCode.Prospect:
    <ul class="dropdown-menu">
      <li><a href="/SearchAdd2/Dialog/prospect/@Model.Id" class="searchadd">Add Prospects</a></li>
      <li><a href="/AddToOrgFromTag/@Model.Id?prospect=true" title="Add Prospects From Tag" class="addfromtag">Add From Tag</a></li>
      <li><a href="/OrgMembersDialog/@Model.Id?prospects=true" title="Update Prospects" class="memberdialog">Update Prospects</a></li>
    </ul>
      break;
    case GroupSelectCode.Previous:
    <ul class="dropdown-menu">
      <li><a href="/AddToOrgPrevFromTag/@Model.Id" class="addprevfromtag" title="Add Previous Members From Tag">Add From Tag</a></li>
    </ul>
      break;
    case GroupSelectCode.Inactive:
    <ul class="dropdown-menu">
      <li><a href="/SearchAdd2/Dialog/inactive/@Model.Id" class="searchadd">@(Model.Org.IsMissionTrip == true ? "Add Sender" : "Add Inactive Members")</a></li>
      <li><a href="/OrgMembersDialog/@Model.Id?inactives=true" title="Update Inactive Members" class="memberdialog">Update Inactive</a></li>
    </ul>
      break;
    case GroupSelectCode.Pending:
    <ul class="dropdown-menu">
      <li><a href="/SearchAdd2/Dialog/pending/@Model.Id" class="searchadd">Add Pending Members</a></li>
      <li><a href="/AddToOrgFromTag/@Model.Id?pending=true" title="Add Pendings From Tag" class="addfromtag">Add From Tag</a></li>
      <li><a href="/OrgMembersDialog/@Model.Id?pendings=true" title="Update Pending Members" class="memberdialog">Update Pending</a></li>
    </ul>
      break;
    }
  </div>
}
@helper ManageGuestLinks(OrgPerson p)
{
  if (p.GroupCode == GroupSelectCode.Guest)
  {
    <br/><a href="/Organization/Join/@Model.Id/@p.PeopleId" class="joinlink"
       confirm="Make this person a Member of this Org?">
      Join Org
    </a>
    if (p.MemberType != "Prospect")
    {
      <br/><a href="/Organization/AddProspect/@Model.Id/@p.PeopleId" class="joinlink"
         confirm="Make this person a Prospect of this Org?">
        Add as Prospect
      </a>
    }
    if (p.LastAttended.HasValue)
    {
      if (p.Hidden == true)
      {
        <br/><a href="/Organization/ShowVisitor/@Model.Id/@p.PeopleId/@p.LastAttended.Value.Ticks/Show" class="joinlink"
           confirm="Show @p.Name as a Guest for this Org?">
          Show
        </a>
      }
      else
      {
        <br/><a href="/Organization/ShowVisitor/@Model.Id/@p.PeopleId/@p.LastAttended.Value.Ticks/Hide" class="joinlink"
           confirm="Hide @p.Name as a Guest for this Org until next visit?">
          Hide
        </a>
      }
    }
  }
}
@helper ManageProspectLinks(OrgPerson p)
{
  if (p.GroupCode == GroupSelectCode.Prospect)
  {
    if (p.Hidden == true)
    {
      <br/><a href="/Organization/ShowProspect/@Model.Id/@p.PeopleId/Show" class="joinlink"
         confirm="Show @p.Name in Prospect List for this Org?">
        Show
      </a>
    }
    else
    {
      <br/><a href="/Organization/ShowProspect/@Model.Id/@p.PeopleId/Hide" class="joinlink"
         confirm="Hide @p.Name on Prospect List for this Org?">
        Hide
      </a>
    }
  }
}
@helper GroupOptions()
{
  <div class="btn-group">
    <button data-toggle="dropdown" class="btn dropdown-toggle btn-info">
      @Model.GroupOptions
      <span class="caret"></span>
    </button>
    <ul class="dropdown-menu">
      <li>
        <a id="multigroup" href="#" class="grp2 @Model.MultiSelectActive">Select Multiple</a>
      </li>
      <li>
        <a id="showhide" href="#" class="grp2 @Model.ShowHiddenActive">Show Hidden</a>
      </li>
      <li>
        <a id="ministryinfo" href="#" class="grp2 @Model.ShowMinistryInfoActive">Minisry Info</a>
      </li>
    </ul>
  </div>
}
@helper FilterPeople()
{
  <div class="filter">
    <div class="form-inline">
      <input type="text" class="form-control tip"
             name="nameFilter" placeholder="Name Filter" value="@Model.NameFilter"
             title="Name Filter
              First and last name or just last name.
              You can put just the first few letters of each.
              PeopleId works too.">
      <div class="input-append">
        <input type="text" class="form-control tip" id="sgFilter"
               name="sgFilter" placeholder="SmallGroup Filter" value="@Model.SgFilter"
               title="SmallGroup Filter
                Match a smallgroup name.
                You can just use the first few letters of a smallgroup.
                Lead with - to exclude.
                Comma separate for multiple smallgroups.
                NONE to find no smallgroups assigned.
                ALL: to match all."/>
        <div class="btn-group">
          <button class="btn dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>
          </button>
          <ul class="dropdown-menu">
            <li>
              <a href="#" id="excludesg">Exclude</a>
            </li>
            <li>
              <a href="#" class="selectsg">Match All</a>
            </li>
            <li>
              <a href="#" class="selectsg">None Assigned</a>
            </li>

            @foreach (var sg in Model.SmallGroups())
            {
              <li>
                <a href="#" class="selectsg">
                  <i class="fa fa-minus hide"></i>@sg.Text</a>
              </li>
            }
          </ul>
        </div>
      </div>
      <a class="setfilter btn ajax">
        Filter

        @if (Model.NameFilter.HasValue() || (Model.SgFilter.HasValue()))
        {
          <span style='color: red'>(filtered)</span>
        }
      </a>
      <a class="btn ajax" data-clear="orgfilter" href="#">Clear</a>
    </div>
  </div>
}
@helper ShowMinistry(OrgPerson p)
{
  if (Model.ShowMinistryInfo)
  {
    var mi = Model.MinistryInfo["{0}-{1}".Fmt(p.Tab, p.PeopleId)];
    if (mi.LastContactReceivedDt.HasValue)
    {
      <br/>
      <a href="/Contact2/@mi.LastContactReceivedId" target="contact">
        Contactee @mi.LastContactReceivedDt.FormatDate2()
      </a>
    }
    if (mi.LastContactMadeId.HasValue)
    {
      <br/>
      <a href="/Contact2/@mi.LastContactMadeId" target="contact">
        Minister @mi.LastContactMadeDt.FormatDate2()
      </a>
    }
    if (mi.TaskAboutId.HasValue)
    {
      <br/>
      <a href="/Task/@mi.TaskAboutId" target="contact" title="">
        Needs Touch @mi.TaskAboutDt.FormatDate2()
      </a>
    }
    if (mi.TaskDelegatedId.HasValue)
    {
      <br/>
      <a href="/Task/@mi.TaskDelegatedId" target="contact" title="">
        Has Task @mi.TaskDelegatedDt.FormatDate2()
      </a>
    }
  }
}
@helper Phones(OrgPerson p)
{
  foreach (var ph in p.Phones)
  {
    @ph <br/>
  }
}
@helper HiddenElements()
{
  @Html.HiddenFor(m => m.GroupSelect)
  @Html.HiddenFor(m => m.MultiSelect)
  @Html.HiddenFor(m => m.ShowHidden)
  @Html.HiddenFor(m => m.ShowMinistryInfo)
  @Html.HiddenFor2(m => m.Id)
}
@helper TableHeader()
{
  <thead>
  <tr>
    <th>

      @if (Model.MultiSelect)
      {
        @Model.SortLink("Tab")
      }
    </th>
    <th>
      @Model.SortLink("Name")
    </th>
    <th>
      @Model.SortLink("MemberType")
    </th>
    <th>
      @Model.SortLink("Church")<br/>
      @Model.SortLink("Age") - @Model.SortLink("Bday")
    </th>
    <th>Communication</th>
    <th>
      @Model.SortLink("% Att.")
    </th>
    <th>
      @Model.SortLink("Last Attended")<br/>
      @Model.SortLink("Join")/@Model.SortLink("Drop")
    </th>
    <th>Tag</th>
  </tr>
  </thead>
}
@helper TableBody()
{
  <tbody>
  @foreach (var p in Model.ViewList())
  {
    <tr>
      <td>
        <img src="/Content/images/individual.gif"/>

        @if (Model.MultiSelect)
        {
          @:&nbsp;@p.Tab
        }
      </td>
      <td>
        <a href="/Person2/@p.PeopleId">@p.Name</a>
      </td>
      <td>
        <a class="membertype" href="/OrgMemberDialog2/Display/@Model.Id/@p.PeopleId"> @p.MemberType </a>
        @ManageGuestLinks(p)
        @ManageProspectLinks(p)
      </td>
      <td>
        @p.MemberStatus<br/>
        @p.Age - @p.BirthDate
      </td>
      <td>
        @Phones(p)
        <a href="mailto:@p.EmailAddress">@p.EmailAddress</a>
      </td>
      <td>
        <a href="">@p.AttPct.ToString2("N1")%</a>
        @ShowMinistry(p)
      </td>
      <td>

        @if (p.LastAttended.HasValue)
        {
          <a href="/Organization/GotoMeetingForDate/@Model.Id/@p.LastAttended.Value.Ticks">
            @p.LastAttended.FormatDate2()
          </a>
        }
        @p.Joined.FormatDate2("<br/>", " join")
        @p.Dropped.FormatDate2("<br/>", " drop")
      </td>
      <td>
        <a pid='@p.PeopleId' title="Add to/Remove from Active Tag" class="taguntag" href="#">
          @(p.HasTag == true ? "Remove" : "Add")
        </a>
      </td>
    </tr>
  }
  </tbody>
}








