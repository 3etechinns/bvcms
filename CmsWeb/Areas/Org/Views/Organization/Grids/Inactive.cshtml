@model CmsWeb.Areas.Org.Models.MemberModel
@Html.Hidden("inactive-qid", (Guid?)ViewBag.queryid)
<div style="margin-bottom:5px">
  Count: <strong id="inactive-count">@Model.Count()</strong>
  <a class="filtergroupslink bt" href="#" title="Filter by name/group">Filter@(Model.isFiltered ? "(filtered)" : "")</a>
  @if (User.IsInRole("Edit"))
  {
    <a href="/SearchAdd2/Dialog/inactive/@Model.OrganizationId" class="searchadd bt">@(Model.Org.IsMissionTrip == true ? "Add Sender" : "Add Inactive Members")</a>
    <a href="/OrgMembersDialog/@Model.OrganizationId?inactives=true" title="Update Inactive Members" class="memberdialog bt">update</a>
  }
  <div class="form-inline">
    <input type="text" class="form-control tip" id="nameFilterMembers"
           name="nameFilter" placeholder="Name Filter" value="@Model.NameFilter"
           title="Name Filter
              First and last name or just last name.
              You can put just the first few letters of each.
              PeopleId works too.">
    <input type="text" class="form-control tip" id="sgFilterMembers"
           name="sgFilter" placeholder="SmallGroup Filter" value="@Model.SgFilter"
           title="SmallGroup Filter
              Match a smallgroup name.
              You can just use the first few letters of a smallgroup.
              Lead with - to exclude.
              Comma separate for multiple smallgroups.
              NONE to find no smallgroups assigned.
              ALL: to match all." />
    <button class="setfilter btn">
      Filter @(Html.Raw(Model.isFiltered ? "<span style='color:red'>(filtered)</span>" : ""))
    </button>
    <button class="clearfilter btn" href="#">Clear</button>
    <input class="ClearFilter" name="ClearFilter" type="hidden" value="false" />
  </div>
</div>
@Html.Partial("Grids/Base", Model)
