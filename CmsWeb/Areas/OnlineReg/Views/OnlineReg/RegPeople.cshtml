@using CmsData
@using CmsData.Registration
@using UtilityExtensions
@model CmsWeb.Areas.OnlineReg.Models.OnlineRegModel

@{
  ViewBag.Title = "RegPeople";
  Layout = "~/Views/Shared/_Layout.cshtml";
  var n = 1;
}

<h2>RegPeople</h2>
<table class="table" style="width:auto">
  <tr><td>DateTime</td><td><a href="@(DbUtil.Db.ServerLink("/OnlineReg/ConfirmTestXml"))/@Model.DatumId">@Model.Datum.Stamp.FormatDateTm()</a></td></tr>
  <tr><td>Status</td><td>@(Model.Datum.Completed == true ? "completed" : "incomplete")</td></tr>
  <tr>
    <td>Org</td>
    <td>
      @if (Model.Orgid > 0 && Model.org != null)
      {
        <a href="/Org/@Model.Orgid">@Model.org.OrganizationName</a>
      }
      else if (Model.masterorgid > 0)
      {
        <a href="/Org/@Model.masterorgid">@Model.masterorg.OrganizationName</a>
      }
      else
      {
        <span>n/a</span>
      }
    </td>
  </tr>
  <tr><td>User</td><td>@Model.LoginName</td></tr>
  @foreach (var p in Model.List)
  {
    <tr>
      <td>@(n++)</td>
      <td>
        <table class="table" style="width:auto">
          @{
            var om = p.GetOrgMember();
            var rr = p.person.RecRegs.Single();
          }
          @foreach (var ask in p.setting.AskItems)
          {
            switch (ask.Type)
            {
              case "AskTickets":
                <tr><td>Tickets:</td><td>@om.Tickets</td></tr>
                break;
              case "AskSize":
              <tr><td>Shirt:</td><td>@om.ShirtSize</td></tr>
                break;
              case "AskEmContact":
              <tr><td>Emerg Contact:</td><td>@rr.Emcontact</td></tr>
              <tr><td>Emerg Phone:</td><td>@rr.Emphone</td></tr>
                break;
              case "AskDoctor":
              <tr><td>Physician Name:</td><td>@rr.Doctor</td></tr>
              <tr><td>Physician Phone:</td><td>@rr.Docphone</td></tr>
                break;
              case "AskInsurance":
              <tr><td>Insurance Carrier:</td><td>@rr.Insurance</td></tr>
              <tr><td>Insurance Policy:</td><td>@rr.Policy</td></tr>
                break;
              case "AskRequest":
              <tr><td>@(((AskRequest)ask).Label):</td><td>@om.Request</td></tr>
                break;
              case "AskHeader":
              <tr><td colspan='2'><h4>@(((AskHeader)ask).Label)</h4></td></tr>
                break;
              case "AskInstruction":
                break;
              case "AskAllergies":
              <tr><td>Medical:</td><td>@rr.MedicalDescription</td></tr>
                break;
              case "AskTylenolEtc":
              <tr>
                <td>
                  Tylenol?: @(p.tylenol == true ? "Yes" : p.tylenol == false ? "No" : "")
                  Advil?: @(p.advil == true ? "Yes" : p.advil == false ? "No" : "")
                  Robitussin?: @(p.robitussin == true ? "Yes" : p.robitussin == false ? "No" : "")
                  Maalox?: @(p.maalox == true ? "Yes" : p.maalox == false ? "No" : "")
                </td>
              </tr>
                break;
              case "AskChurch":
              <tr><td>Member:</td><td>@rr.Member</td></tr>
              <tr><td>OtherChurch:</td><td>@rr.ActiveInAnotherChurch</td></tr>
                break;
              case "AskParents":
              <tr><td>Mother's name:</td><td>@rr.Mname</td></tr>
              <tr><td>Father's name:</td><td>@rr.Fname</td></tr>
                break;
              case "AskCoaching":
              <tr><td>Coaching:</td><td>@rr.Coaching</td></tr>
                break;
              case "AskSMS":
              <tr><td>Receive Texts:</td><td>@p.person.ReceiveSMS</td></tr>
                break;
              case "AskDropdown":
              <tr>
                <td>@(Util.PickFirst(((AskDropdown)ask).Label, "Options")))</td>
                <td>@(((AskDropdown)ask).SmallGroupChoice(p.option).Description):</td>
              </tr>
                break;
              case "AskMenu":
                var menulabel = ((AskMenu)ask).Label;
                foreach (var i in ((AskMenu)ask).MenuItemsChosen(p.MenuItem[ask.UniqueId]))
                {
                  <tr>
                    <td>@menulabel</td>
                    <td>
                      @i.number @i.desc
                      @if (i.amt > 0)
                      {
                        <text>(at @i.amt.ToString("c"))</text>
                      }
                    </td>
                  </tr>
                      menulabel = string.Empty;
                }
                break;
              case "AskCheckboxes":
                var askcb = (AskCheckboxes)ask;
                var cbmenulabel = askcb.Label;
                foreach (var i in askcb.CheckboxItemsChosen(p.Checkbox))
                {
                  if (cbmenulabel.HasValue())
                  {
                    <tr><td colspan='2'><br>@cbmenulabel</td></tr>
                  }
                  <tr>
                    <td></td>
                    <td>@i.Description @(i.Fee > 0 ? "({0:C})".Fmt(i.Fee) : "")<br>(@i.SmallGroup)</td>
                  </tr>
                  cbmenulabel = string.Empty;
                }
                break;
              case "AskYesNoQuestions":
                foreach (var a in ((AskYesNoQuestions)ask).list
                .Where(aa => p.YesNoQuestion.ContainsKey(aa.SmallGroup)))
                {
                  <tr>
                    <td>@a.Question:</td>
                    <td>@(p.YesNoQuestion[a.SmallGroup] == true ? "Yes" : "No")</td>
                  </tr>
                }
                break;
              case "AskExtraQuestions":
                foreach (var a in p.ExtraQuestion[ask.UniqueId].Where(aa => aa.Value.HasValue()))
                {
                  <tr><td>@a.Key:</td><td>@a.Value</td></tr>
                }
                break;
              case "AskText":
                foreach (var a in p.Text[ask.UniqueId].Where(aa => aa.Value.HasValue()))
                {
                  <tr><td>@a.Key:</td><td>@a.Value</td></tr>
                }
                break;
              case "AskGradeOptions":
              <tr>
                <td>GradeOption:</td>
                <td>@p.GradeOptions(ask).SingleOrDefault(s => s.Value == (p.gradeoption ?? "00")).Text</td>
              </tr>
                break;
            }
            if (p.setting.AgeGroups.Count > 0)
            {
              <tr><td>AgeGroup:</td><td>@p.AgeGroup()</td></tr>
            }
          }
        </table>
      </td>
    </tr>
  }
</table>
