@using CmsData.Registration
@using UtilityExtensions
@model CmsWeb.Models.OnlineRegPersonModel
@if (Model.Parent.SupportMissionTrip)
{
}
else
{
    foreach (var ask in Model.setting.AskItems)
    {
        <div class="form-group">
            @switch (ask.Type)
            {
                case "AskSize":
                    <label class="control-label col-sm-3">@(((AskSize) ask).Label)</label>
                    <div class="col-sm-9">
                        <p class="form-control-static">@Model.shirtsize</p>
                    </div>
                    break;
                case "AskRequest":
                    <label class="control-label col-sm-3">@Util.PickFirst(((AskRequest) ask).Label, "Request")</label>
                    <div class="col-sm-9">
                        <p class="form-control-static">@Model.request</p>
                    </div>
                    break;
                case "AskHeader":
                    <div class="col-sm-offset-3 col-sm-9">
                        <h4 class="form-control-static">@(((AskHeader) ask).Label)</h4>
                    </div>
                    break;
                case "AskInstruction":
                    break;
                case "AskEmContact":
                    <tr>
                        <td>Emergency Contact</td>
                        <td>@Model.emcontact </td>
                    </tr>
                    <tr>
                        <td>Emergency Phone</td>
                        <td>@Model.emphone </td>
                    </tr>
                    break;
                case "AskInsurance":
                    <tr>
                        <td>Health Insurance Carrier</td>
                        <td>@Model.insurance </td>
                    </tr>
                    <tr>
                        <td>Policy #</td>
                        <td>@Model.policy </td>
                    </tr>
                    break;
                case "AskDoctor":
                    <tr>
                        <td>Family Physician Name</td>
                        <td>@Model.doctor </td>
                    </tr>
                    <tr>
                        <td>Family Physician Phone</td>
                        <td>@Model.docphone </td>
                    </tr>
                    break;
                case "AskAllergies":
                    <tr>
                        <td>Allergies or<br />
                            Medical Problems</td>
                        <td>@Model.medical </td>
                    </tr>
                    break;
                case "AskTylenolEtc":
                    <tr>
                        <td>May we give your child</td>
                        <td>
                            Tylenol?: @(Model.tylenol == true ? "Yes" : Model.tylenol == false ? "No" : ""),
                            Advil?: @(Model.advil == true ? "Yes" : Model.advil == true ? "No" : ""),
                            Robitussin?: @(Model.robitussin == true ? "Yes" : Model.robitussin == false ? "No" : ""),
                            Maalox?: @(Model.maalox == true ? "Yes" : Model.maalox == false ? "No" : "")
                        </td>
                    </tr>
                    break;
                case "AskParents":
                    <tr>
                        <td>Mother's Name (first last)</td>
                        <td>@Model.mname </td>
                    </tr>
                    <tr>
                        <td>Father's Name (first last)</td>
                        <td>@Model.fname </td>
                    </tr>
                    break;
                case "AskCoaching":
                    <tr>
                        <td>Interested in Coaching?</td>
                        <td>@(Model.coaching == true ? "Yes" : "No") </td>
                    </tr>
                    break;
                case "AskSMS":
                    <tr>
                        <td>Recive Text Messages?</td>
                        <td>@(Model.sms == true ? "Yes" : "No") </td>
                    </tr>
                    break;
                case "AskChurch":
                    <tr>
                        <td>@(Model.setting.AskVisible("AskParents") ? "Parent's Church" : "Church")</td>
                        <td>@(Model.memberus ? "Member of our church" : "not member of our church") <br />
                            @(Model.otherchurch ? "Active in another Local Church" : "not active in another church") </td>
                    </tr>
                    break;
                case "AskTickets":
                    <tr>
                        <td>No. of Items</td>
                        <td>@Model.ntickets </td>
                    </tr>
                    break;
                case "AskSuggestedFee":
                    <tr>
                        <td>@Util.PickFirst(((AskSuggestedFee) ask).Label, "Suggested Fee")</td>
                        <td>@Model.Suggestedfee.ToString2("f2") </td>
                    </tr>
                    break;
                case "AskDropdown":
                    <tr>
                        <td><div class="wraparound">@Util.PickFirst(((AskDropdown) ask).Label, "Options")</div></td>
                        <td>@(((AskDropdown) ask).SmallGroupChoice(Model.option).Description)</td>
                    </tr>
                    break;
                case "AskExtraQuestions":
                    var eq = (AskExtraQuestions) ask;
                    foreach (var a in eq.list)
                    {
                        <tr>
                            <td><div class="wraparound">@a.Question</div></td>
                            <td> @Model.ExtraQuestion[eq.UniqueId][a.Question]</td>
                        </tr>
                    }
                    break;
                case "AskYesNoQuestions":
                    foreach (var a in ((AskYesNoQuestions) ask).list)
                    {
                        <tr>
                            <td><div class="wraparound">@a.Question</div></td>
                            <td> @(Model.YesNoChecked(a.SmallGroup, true) ? "Yes" : "No") </td>
                        </tr>
                    }
                    break;
                case "AskCheckboxes":
                    var cb = (AskCheckboxes) ask;
                    foreach (var a in cb.list)
                    {
                        if (a.SmallGroup == "comment")
                        {
                        }
                        else
                        {
                            if (a.SmallGroup == "nocheckbox" && cb.Cols == 1)
                            {
                                <tr><td colspan="2"><b>@Html.Raw(a.Description)</b></td></tr>
                            }
                            else if (Model.CheckboxChecked(a.SmallGroup))
                            {
                                <tr><td><div class="wraparound">@a.Description</div></td>
                                    <td>Checked</td>
                                </tr>
                            }
                        }
                    }
                    break;
                case "AskMenu":
                    foreach (var i in ((AskMenu) ask).MenuItemsChosen(Model.MenuItem[ask.UniqueId]))
                    {
                        <tr>
                            <td>@i.desc</td>
                            <td> @i.number </td>
                        </tr>
                    }
                    break;
                case "AskGradeOptions":
                    <tr>
                        <td>Grade Option</td>
                        <td>@Model.GradeOptions(ask).SingleOrDefault(s => s.Value == (Model.gradeoption ?? "00")).Text </td>
                    </tr>
                    break;
            }
        </div>
    }
    foreach (var i in Model.FundItemsChosen())
    { 
        <tr>
            <td>@i.desc</td>
            <td> @i.amt.ToString("N2")</td>
        </tr>
    }
    if (Model.setting.Deposit > 0)
    { 
        <tr>
            <td>Payment</td>
            <td>@(Model.paydeposit == true ? "Pay Deposit Only" : "Pay Full Amount")</td>
        </tr>
    }
}