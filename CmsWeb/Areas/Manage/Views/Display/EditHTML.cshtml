@using CmsData
@model CmsData.Content
@{
  ViewBag.Title = "Edit Html Content";
  ViewBag.PageHeader = Model.Title;
  Layout = ViewExtensions2.TouchPointLayout();

}
@using (Html.BeginForm("ContentUpdate", "Display", FormMethod.Post))
{
  <div class="row">
    <div class="col-md-9">
      <div class="box box-responsive">
        <div class="box-content">
          <div class="row">
            <div class="col-sm-4">
              <div class="form-group">
                <label for="title" class="control-label">Title</label>
                @Html.TextBox("title", Model.Title, new { @class = "form-control" })
              </div>
            </div>
          </div>
          <div class="form-group">
            <div class="checkbox">
              <label class="control-label">
                @Html.CheckBox("snippet", Model.Snippet) Snippet?&nbsp;&nbsp;&nbsp;&nbsp;<span class="text-info"><i class="fa fa-info-circle"></i> Note:  Snippet should only be clicked when you first come to the page, not after you have made any changes otherwise they will be lost.</span>
              </label>
            </div>
          </div>
          <div class="form-group">
            @if (Util2.UseNewEditor)
            {
              <iframe frameborder="0" style="width: 100%;" id="email-body" name="email-body"></iframe>
              <input type="hidden" id="body" name="body"/>
            }
            else
            {
              @Html.TextArea("body", new { @class = "form-control", rows = "26" })
            }
          </div>
          <a href="/Display/#tab_htmlContent" class="btn btn-default">Cancel</a>
          <a href="/Display/ContentDelete/@Model.Id" class="btn btn-danger delete"><i class="fa fa-trash"></i> Delete</a>
          @if (Util2.UseNewEditor)
          {
            <a class="btn btn-primary save">Save Content</a>
          }
          else
          {
            <input type="submit" class="btn btn-primary" value="Save Content"/>
          }
        </div>
      </div>
    </div>
  </div>
  @Html.Hidden("id")
  @Html.Hidden("name")
}
@section scripts
{
  @if (Util2.UseNewEditor)
  {
    @ViewExtensions2.FroalaEditorScripts()
    <script type="text/javascript">
      function iframeLoaded() {
        var iFrameID = document.getElementById('email-body');
        if (iFrameID) {
          // here you can make the height, I delete it first, then I make it again
          iFrameID.height = "";
          iFrameID.height = iFrameID.contentWindow.document.body.scrollHeight + 200 + "px";
        }
      }

      function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
      }

      $(function () {
        var iframeSource = "/Display/EmailBody/@Model.Id";

        $.Editable.DEFAULTS.allowedTags.push('html');
        $.Editable.DEFAULTS.allowedTags.push('head');
        $.Editable.DEFAULTS.allowedTags.push('style');
        $.Editable.DEFAULTS.allowedTags.push('body');
        $.Editable.DEFAULTS.allowedAttrs.push('xmlns');
        $.Editable.DEFAULTS.allowedAttrs.push('bvedit');
        $.Editable.DEFAULTS.allowedAttrs.push('bveditadd');
        $.Editable.DEFAULTS.allowedAttrs.push('bvrepeat');
        $.Editable.DEFAULTS.allowedAttrs.push('bvrepeatadd');

        var $emailBody = $('#email-body');
        $emailBody.attr('src', iframeSource);
        $emailBody.load(function () {
          $(this).contents().find('#editor-body').froalaEditable({
            inlineMode: false,
            allowStyle: true,
            spellcheck: true,
            useFileName: false,
            useClasses: false,
            fullPage: true,
            minHeight: 100,
            theme: 'custom',
            buttons: ['bold', 'italic', 'underline', 'fontSize', 'fontFamily', 'color', 'removeFormat', 'sep', 'formatBlock', 'align', 'insertOrderedList', 'insertUnorderedList', 'outdent', 'indent', 'sep', 'createLink', 'insertImage', 'uploadFile', 'table', 'undo', 'redo', 'html'],
            imageUploadURL: '/Account/FroalaUpload',
            fileUploadURL: '/Account/FroalaUpload',
            maxFileSize: (1024 * 1024 * 15)
          });

          // reset the html... it's strange but resetting the html here causes the editor to retain any html, head, body tags that might be in the html.
          var fullHtml = $(this).contents().find('#hiddenHtml').val();
          $(this).contents().find('#editor-body').froalaEditable('setHTML', fullHtml, true);

          iframeLoaded();
          $(this).contents().find('#editor-body').on('editable.htmlHide', function (e, editor, html) {
            iframeLoaded();
          });
        });

        $("a.save").click(function (ev) {
          ev.preventDefault();
          var emailHtml = $('#email-body').contents().find('#editor-body').froalaEditable('getHTML');
          $('#body').val(emailHtml);
          $(this).closest('form').submit();
        });

        $("a.delete").click(function (ev) {
          ev.preventDefault();
          var href = this.href;

          swal({
            title: "Are you sure?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
          },
          function () {
            $.post(href, null, function (ret) {
              if (ret && ret.error)
                swal("Error!", ret.error, "error");
              else {
                swal({
                  title: "Deleted!",
                  type: "success"
                },
                    function () {
                      window.location = "/Manage/Display/#tab_htmlContent";
                    });
              }
            });
          });
        });

        $("#snippet").change(function () {
          var checked = this.checked;
          swal({
            title: "Reload page?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-warning",
            confirmButtonText: "Yes!",
            closeOnConfirm: false
          },
          function () {
            if (checked)
              window.location = "/Display/ContentEdit/@Model.Id/?snippet=true";
            else
              window.location = "/Display/ContentEdit/@Model.Id/?snippet=true";
          });

        });
      });
    </script>
  }
  else
  {
    @ViewExtensions2.CKEditor()
    @Fingerprint.Script("/Scripts/SpecContent/EditHtml.js")
    <script type="text/javascript">

      function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
      }

    </script>
  }
}
