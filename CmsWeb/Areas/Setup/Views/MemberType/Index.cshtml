@model IEnumerable<CmsWeb.Areas.Setup.Controllers.MemberTypeController.MemberTypeInfo>
@{
    Layout = ViewExtensions2.TouchPointLayout();
    ViewBag.Title = "Member Type";
}
@section head{
    <link href="@Url.Content("~/Content/touchpoint/bootstrap-editable/css/bootstrap-editable.css")" rel="stylesheet">
}
<h2>Member Types</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <strong>Success!</strong> @TempData["SuccessMessage"]
    </div>
}
<div class="alert alert-warning">
    <h4>Member Type Migration</h4>
    <p>
        The following allows you to globally change one member type for all organization members having that type, to another existing member type.<br />
        There is no <strong>undo</strong>, so please be careful.
    </p>
    <p>
        @using (Html.BeginForm("Move", "MemberType", FormMethod.Post, new { @class = "form-inline" }))
        {
            <div class="form-group">
                <label class="sr-only" for="fromid">Source Member Type</label>
                <select id="fromid" name="fromid" class="form-control">
                    <option value="">--Source Member Type--</option>
                    @foreach (var item in Model)
                    {
                        <option value="@item.Id">@item.Description</option>
                    }
                </select> to
            </div>
            <div class="form-group">
                <label class="sr-only" for="toid">Destination Member Type</label>
                <select id="toid" name="toid" class="form-control">
                    <option value="">--Destination Member Type--</option>
                    @foreach (var item in Model)
                    {
                        <option value="@item.Id">@item.Description</option>
                    }
                </select>
            </div>
            <button id="movemt" type="submit" class="btn btn-warning">Move Member Type</button>
        }
    </p>
</div>
<div class="row">
    <div class="col-sm-9">
        <div class="alert alert-info alert-dismissible">
            <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
            Click to edit the Code or Name. The items that cannot be deleted are expected to be there by the system. The description for those can be edited as long as the meaning is the same.
        </div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th style="width: 75px;">Id</th>
                    <th style="width: 270px;">Code</th>
                    <th style="width: 300px;">Description</th>
                    <th style="width: 200px;">Attendance Type</th>
                    <th style="width: 100px;">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="width: 75px;">@item.Id</td>
                        <td style="width: 270px;">
                            @if (item.Hardwired == true)
                            {
                                @item.Code
                            }
                            else
                            {
                                <a id="c@(item.Id)" class="clickEdit" data-pk="c@(item.Id)">@item.Code</a>
                            }
                        </td>
                        <td style="width: 300px;">
                            <a id="v@(item.Id)" class="clickEdit" data-pk="v@(item.Id)">@item.Description</a>
                        </td>
                        <td style="width: 200px;">
                            <a id="a@(item.Id)" class="clickSelect" data-value="@(item.AttendTypeId == null ? "" : item.AttendTypeId.ToString())" data-pk="a@(item.Id)">@(item.AttendTypeId == null ? "" : item.AttendType)</a>
                        </td>
                        <td style="width: 100px;">
                            @if (!item.Hardwired.GetValueOrDefault())
                            {
                                <a id="d@(item.Id)" href="#" class="delete btn btn-danger btn-sm"><i class="fa fa-trash"></i> Delete</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
            
        </table>
    </div>
    <div class="col-sm-3">
        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm("Create", "MemberType"))
                {
                    <div class="form-group">
                        <label for="id">New Member Type Id</label>
                        <input type="number" id="id" name="id" class="form-control" />
                    </div>
                    <input type="submit" class="btn btn-primary btn-block" value="Create" />
                }
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="@Url.Content("~/Scripts/touchpoint/bootstrap-editable/bootstrap-editable.js")"></script>
    <script type="text/javascript">
        $(function () {
            $.fn.editableform.buttons = '<button type="submit" class="btn btn-primary btn-sm editable-submit">' +
                                            '<i class="fa fa-fw fa-check"></i>' +
                                        '</button>' +
                                        '<button type="button" class="btn btn-default btn-sm editable-cancel">' +
                                            '<i class="fa fa-fw fa-times"></i>' +
                                        '</button>';

            $(".clickEdit").editable({
                mode: 'inline',
                type: 'text',
                url: "/MemberType/Edit/",
                params: function (params) {
                    var data = {};
                    data['id'] = params.pk;
                    data['value'] = params.value;
                    return data;
                }
            });

            $(".clickSelect").editable({
                mode: 'inline',
                type: 'select',
                url: "/MemberType/EditAttendType/",
                source: "/MemberType/AttendTypeCodes/",
                params: function (params) {
                    var data = {};
                    data['id'] = params.pk;
                    data['value'] = params.value;
                    return data;
                }
            });

            $("a.delete").click(function (e) {
                e.preventDefault();
                var id = $(this).attr("id");
                swal({
                    title: "Are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes, delete it!",
                    closeOnConfirm: false
                },
                function () {
                    $.post("/MemberType/Delete/" + id, null, function (ret) {
                        if (ret && ret.error)
                            swal("Error!", ret.error, "error");
                        else {
                            swal({
                                title: "Deleted!",
                                type: "success"
                            },
                            function () {
                                window.location = "/MemberType/";
                            });
                        }
                    });
                });
            });

            $("#movemt").click(function (ev) {
                ev.preventDefault();
                var f = $(this).closest("form");
                swal({
                    title: "Are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-warning",
                    confirmButtonText: "Yes, do migration!",
                    closeOnConfirm: false
                },
                function () {
                    f.submit();
                });
            });
        });
    </script>
}